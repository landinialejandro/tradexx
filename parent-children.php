<?php
// This script and data application were generated by AppGini 5.84
// Download AppGini for free from https://bigprof.com/appgini/download/

	/* Configuration */
	/*************************************/

		$pcConfig = array(
			'Customers' => array(
			),
			'Retention' => array(
			),
			'Alert' => array(
			),
			'CustomerClass' => array(
			),
			'Staff' => array(
			),
			'Country' => array(
			),
			'Province' => array(
			),
			'City' => array(
			),
			'Warehouse' => array(
			),
			'Tracking' => array(
				'Warehouse' => array(
					'parent-table' => 'Warehouse',
					'parent-primary-key' => 'id',
					'child-primary-key' => 'id',
					'child-primary-key-index' => 0,
					'tab-label' => 'Tracking <span class="hidden child-label-Tracking child-field-caption">(Warehouse)</span>',
					'auto-close' => true,
					'table-icon' => 'resources/table_icons/Tracking center 1.png',
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => array(2 => 'Date', 3 => 'Warehouse', 4 => 'Tracking', 5 => 'Customer', 6 => 'Dimensions', 7 => 'Weight', 8 => 'Volume', 9 => 'Total', 11 => 'Freight type', 12 => 'Status', 13 => 'Zone', 14 => 'DeliveredDate'),
					'display-field-names' => array(2 => 'Date', 3 => 'Warehouse', 4 => 'Tracking', 5 => 'Customer', 6 => 'Dimensions', 7 => 'Weight', 8 => 'Volume', 9 => 'Total', 11 => 'Freight', 12 => 'Status', 13 => 'Zone', 14 => 'DeliveredDate'),
					'sortable-fields' => array(0 => '`Tracking`.`id`', 1 => '`Warehouse1`.`id`', 2 => 'date_format(`Warehouse1`.`Date`,\'%m/%d/%Y\')', 3 => '`Warehouse1`.`Warehouse`', 4 => 5, 5 => '`Customers1`.`Customer`', 6 => 7, 7 => '`Tracking`.`Weight`', 8 => '`Tracking`.`Volume`', 9 => '`Tracking`.`Total`', 10 => '`Staff1`.`Employee`', 11 => '`Warehouse1`.`Freight`', 12 => 13, 13 => 14, 14 => '`Tracking`.`DeliveredDate`'),
					'records-per-page' => 10,
					'default-sort-by' => false,
					'default-sort-direction' => 'asc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-Tracking',
					'template-printable' => 'children-Tracking-printable',
					'query' => "SELECT `Tracking`.`id` as 'id', IF(    CHAR_LENGTH(`Warehouse1`.`id`), CONCAT_WS('',   `Warehouse1`.`id`), '') as 'WhID', IF(    CHAR_LENGTH(if(`Warehouse1`.`Date`,date_format(`Warehouse1`.`Date`,'%m/%d/%Y'),'')), CONCAT_WS('',   if(`Warehouse1`.`Date`,date_format(`Warehouse1`.`Date`,'%m/%d/%Y'),'')), '') as 'Date', IF(    CHAR_LENGTH(`Warehouse1`.`Warehouse`), CONCAT_WS('',   `Warehouse1`.`Warehouse`), '') as 'Warehouse', `Tracking`.`Tracking` as 'Tracking', IF(    CHAR_LENGTH(`Customers1`.`Customer`), CONCAT_WS('',   `Customers1`.`Customer`), '') as 'Customer', `Tracking`.`Dimensions` as 'Dimensions', `Tracking`.`Weight` as 'Weight', `Tracking`.`Volume` as 'Volume', `Tracking`.`Total` as 'Total', IF(    CHAR_LENGTH(`Staff1`.`Employee`), CONCAT_WS('',   `Staff1`.`Employee`), '') as 'Employee', IF(    CHAR_LENGTH(`Warehouse1`.`Freight`), CONCAT_WS('',   `Warehouse1`.`Freight`), '') as 'Freight', `Tracking`.`Status` as 'Status', IF(    CHAR_LENGTH(`Province1`.`Province`), CONCAT_WS('',   `Province1`.`Province`), '') as 'Zone', if(`Tracking`.`DeliveredDate`,date_format(`Tracking`.`DeliveredDate`,'%m/%d/%Y %h:%i %p'),'') as 'DeliveredDate' FROM `Tracking` LEFT JOIN `Warehouse` as Warehouse1 ON `Warehouse1`.`id`=`Tracking`.`Warehouse` LEFT JOIN `Customers` as Customers1 ON `Customers1`.`id`=`Tracking`.`Customer` LEFT JOIN `Staff` as Staff1 ON `Staff1`.`id`=`Tracking`.`Employee` LEFT JOIN `Province` as Province1 ON `Province1`.`id`=`Customers1`.`Province` "
				),
				'Customer' => array(
					'parent-table' => 'Customers',
					'parent-primary-key' => 'id',
					'child-primary-key' => 'id',
					'child-primary-key-index' => 0,
					'tab-label' => 'Tracking <span class="hidden child-label-Tracking child-field-caption">(Customer)</span>',
					'auto-close' => false,
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => array(2 => 'Date', 3 => 'Warehouse', 4 => 'Tracking', 5 => 'Customer', 6 => 'Dimensions', 7 => 'Weight', 8 => 'Volume', 9 => 'Total', 11 => 'Freight type', 12 => 'Status', 13 => 'Zone', 14 => 'DeliveredDate'),
					'display-field-names' => array(2 => 'Date', 3 => 'Warehouse', 4 => 'Tracking', 5 => 'Customer', 6 => 'Dimensions', 7 => 'Weight', 8 => 'Volume', 9 => 'Total', 11 => 'Freight', 12 => 'Status', 13 => 'Zone', 14 => 'DeliveredDate'),
					'sortable-fields' => array(0 => '`Tracking`.`id`', 1 => '`Warehouse1`.`id`', 2 => 'date_format(`Warehouse1`.`Date`,\'%m/%d/%Y\')', 3 => '`Warehouse1`.`Warehouse`', 4 => 5, 5 => '`Customers1`.`Customer`', 6 => 7, 7 => '`Tracking`.`Weight`', 8 => '`Tracking`.`Volume`', 9 => '`Tracking`.`Total`', 10 => '`Staff1`.`Employee`', 11 => '`Warehouse1`.`Freight`', 12 => 13, 13 => 14, 14 => '`Tracking`.`DeliveredDate`'),
					'records-per-page' => 10,
					'default-sort-by' => false,
					'default-sort-direction' => 'asc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-Tracking',
					'template-printable' => 'children-Tracking-printable',
					'query' => "SELECT `Tracking`.`id` as 'id', IF(    CHAR_LENGTH(`Warehouse1`.`id`), CONCAT_WS('',   `Warehouse1`.`id`), '') as 'WhID', IF(    CHAR_LENGTH(if(`Warehouse1`.`Date`,date_format(`Warehouse1`.`Date`,'%m/%d/%Y'),'')), CONCAT_WS('',   if(`Warehouse1`.`Date`,date_format(`Warehouse1`.`Date`,'%m/%d/%Y'),'')), '') as 'Date', IF(    CHAR_LENGTH(`Warehouse1`.`Warehouse`), CONCAT_WS('',   `Warehouse1`.`Warehouse`), '') as 'Warehouse', `Tracking`.`Tracking` as 'Tracking', IF(    CHAR_LENGTH(`Customers1`.`Customer`), CONCAT_WS('',   `Customers1`.`Customer`), '') as 'Customer', `Tracking`.`Dimensions` as 'Dimensions', `Tracking`.`Weight` as 'Weight', `Tracking`.`Volume` as 'Volume', `Tracking`.`Total` as 'Total', IF(    CHAR_LENGTH(`Staff1`.`Employee`), CONCAT_WS('',   `Staff1`.`Employee`), '') as 'Employee', IF(    CHAR_LENGTH(`Warehouse1`.`Freight`), CONCAT_WS('',   `Warehouse1`.`Freight`), '') as 'Freight', `Tracking`.`Status` as 'Status', IF(    CHAR_LENGTH(`Province1`.`Province`), CONCAT_WS('',   `Province1`.`Province`), '') as 'Zone', if(`Tracking`.`DeliveredDate`,date_format(`Tracking`.`DeliveredDate`,'%m/%d/%Y %h:%i %p'),'') as 'DeliveredDate' FROM `Tracking` LEFT JOIN `Warehouse` as Warehouse1 ON `Warehouse1`.`id`=`Tracking`.`Warehouse` LEFT JOIN `Customers` as Customers1 ON `Customers1`.`id`=`Tracking`.`Customer` LEFT JOIN `Staff` as Staff1 ON `Staff1`.`id`=`Tracking`.`Employee` LEFT JOIN `Province` as Province1 ON `Province1`.`id`=`Customers1`.`Province` "
				),
			),
			'Status' => array(
			),
			'Invoice' => array(
				'Customer' => array(
					'parent-table' => 'Customers',
					'parent-primary-key' => 'id',
					'child-primary-key' => 'id',
					'child-primary-key-index' => 0,
					'tab-label' => 'Invoices <span class="hidden child-label-Invoice child-field-caption">(Customer)</span>',
					'auto-close' => false,
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => array(0 => 'ID', 1 => 'Type', 2 => 'Number', 3 => 'Date', 5 => 'Customer', 6 => 'Phone', 7 => 'Email', 10 => 'Country', 11 => 'Payment Status', 12 => 'Due amount', 13 => 'Amount paid', 14 => 'Balance', 15 => 'Status', 16 => 'Tax', 17 => 'Total', 22 => 'Realted'),
					'display-field-names' => array(0 => 'id', 1 => 'type', 2 => 'number', 3 => 'Date', 5 => 'Customer', 6 => 'Phone', 7 => 'Email', 10 => 'Country', 11 => 'PaymentStatus', 12 => 'AmountDUE', 13 => 'AmountPAID', 14 => 'Balance', 15 => 'Status', 16 => 'tax', 17 => 'Total', 22 => 'realted'),
					'sortable-fields' => array(0 => '`Invoice`.`id`', 1 => 2, 2 => '`Invoice`.`number`', 3 => '`Invoice`.`Date`', 4 => '`Customers1`.`Title`', 5 => '`Customers1`.`Customer`', 6 => '`Customers1`.`Phone`', 7 => '`Customers1`.`Email`', 8 => '`Customers1`.`Address`', 9 => 10, 10 => 11, 11 => 12, 12 => '`Invoice`.`AmountDUE`', 13 => '`Invoice`.`AmountPAID`', 14 => '`Invoice`.`Balance`', 15 => 16, 16 => 17, 17 => 18, 18 => 19, 19 => 20, 20 => 21, 21 => 22, 22 => 23),
					'records-per-page' => 10,
					'default-sort-by' => false,
					'default-sort-direction' => 'asc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-Invoice',
					'template-printable' => 'children-Invoice-printable',
					'query' => "SELECT `Invoice`.`id` as 'id', `Invoice`.`type` as 'type', `Invoice`.`number` as 'number', if(`Invoice`.`Date`,date_format(`Invoice`.`Date`,'%m/%d/%Y'),'') as 'Date', IF(    CHAR_LENGTH(`Customers1`.`Title`), CONCAT_WS('',   `Customers1`.`Title`), '') as 'Title', IF(    CHAR_LENGTH(`Customers1`.`Customer`), CONCAT_WS('',   `Customers1`.`Customer`), '') as 'Customer', IF(    CHAR_LENGTH(`Customers1`.`Phone`), CONCAT_WS('',   `Customers1`.`Phone`), '') as 'Phone', IF(    CHAR_LENGTH(`Customers1`.`Email`), CONCAT_WS('',   `Customers1`.`Email`), '') as 'Email', IF(    CHAR_LENGTH(`Customers1`.`Address`), CONCAT_WS('',   `Customers1`.`Address`), '') as 'Address', IF(    CHAR_LENGTH(`City1`.`City`), CONCAT_WS('',   `City1`.`City`), '') as 'City', IF(    CHAR_LENGTH(`Country1`.`Country`), CONCAT_WS('',   `Country1`.`Country`), '') as 'Country', `Invoice`.`PaymentStatus` as 'PaymentStatus', `Invoice`.`AmountDUE` as 'AmountDUE', `Invoice`.`AmountPAID` as 'AmountPAID', `Invoice`.`Balance` as 'Balance', `Invoice`.`Status` as 'Status', `Invoice`.`tax` as 'tax', `Invoice`.`Total` as 'Total', `Invoice`.`usrAdd` as 'usrAdd', `Invoice`.`whenAdd` as 'whenAdd', `Invoice`.`usrUpdated` as 'usrUpdated', `Invoice`.`whenUpdated` as 'whenUpdated', IF(    CHAR_LENGTH(`Invoice1`.`id`) || CHAR_LENGTH(`Invoice1`.`number`), CONCAT_WS('',   `Invoice1`.`id`, ' - ', `Invoice1`.`number`), '') as 'realted' FROM `Invoice` LEFT JOIN `Customers` as Customers1 ON `Customers1`.`id`=`Invoice`.`Customer` LEFT JOIN `Invoice` as Invoice1 ON `Invoice1`.`id`=`Invoice`.`realted` LEFT JOIN `City` as City1 ON `City1`.`id`=`Customers1`.`City` LEFT JOIN `Country` as Country1 ON `Country1`.`id`=`Customers1`.`Country` "
				),
			),
			'InvoiceDetails' => array(
				'invoice' => array(
					'parent-table' => 'Invoice',
					'parent-primary-key' => 'id',
					'child-primary-key' => 'id',
					'child-primary-key-index' => 0,
					'tab-label' => 'InvoiceDetails <span class="hidden child-label-InvoiceDetails child-field-caption">(Invoice)</span>',
					'auto-close' => false,
					'table-icon' => 'resources/table_icons/basket_put.png',
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => array(2 => 'Order', 3 => 'Product', 4 => 'Qty', 5 => 'ItemSale', 6 => 'SubTotal'),
					'display-field-names' => array(2 => 'order', 3 => 'product', 4 => 'qty', 5 => 'itemSale', 6 => 'SubTotal'),
					'sortable-fields' => array(0 => '`InvoiceDetails`.`id`', 1 => '`Invoice1`.`id`', 2 => '`InvoiceDetails`.`order`', 3 => 4, 4 => '`InvoiceDetails`.`qty`', 5 => '`Products1`.`itemSale`', 6 => 7),
					'records-per-page' => 10,
					'default-sort-by' => false,
					'default-sort-direction' => 'asc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-InvoiceDetails',
					'template-printable' => 'children-InvoiceDetails-printable',
					'query' => "SELECT `InvoiceDetails`.`id` as 'id', IF(    CHAR_LENGTH(`Invoice1`.`id`), CONCAT_WS('',   `Invoice1`.`id`), '') as 'invoice', `InvoiceDetails`.`order` as 'order', IF(    CHAR_LENGTH(`Products1`.`code`) || CHAR_LENGTH(`Products1`.`item`), CONCAT_WS('',   `Products1`.`code`, ' - ', `Products1`.`item`), '') as 'product', `InvoiceDetails`.`qty` as 'qty', IF(    CHAR_LENGTH(`Products1`.`itemSale`), CONCAT_WS('',   `Products1`.`itemSale`), '') as 'itemSale', `InvoiceDetails`.`SubTotal` as 'SubTotal' FROM `InvoiceDetails` LEFT JOIN `Invoice` as Invoice1 ON `Invoice1`.`id`=`InvoiceDetails`.`invoice` LEFT JOIN `Products` as Products1 ON `Products1`.`id`=`InvoiceDetails`.`product` "
				),
			),
			'Products' => array(
			),
			'WHJournal' => array(
			),
			'CRM' => array(
			),
			'Payroll' => array(
			),
			'Brand' => array(
			),
			'Model' => array(
			),
			'System' => array(
			),
			'Part' => array(
			),
			'DatabaseAUTO' => array(
			),
			'GeneralDB' => array(
			),
			'CustomerAuto' => array(
				'Customer' => array(
					'parent-table' => 'Customers',
					'parent-primary-key' => 'id',
					'child-primary-key' => 'id',
					'child-primary-key-index' => 0,
					'tab-label' => 'Vehicle Database <span class="hidden child-label-CustomerAuto child-field-caption">(Customer)</span>',
					'auto-close' => false,
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => array(1 => 'Customer', 2 => 'VehicleType', 3 => 'VIN', 4 => 'Brand', 5 => 'Model', 6 => 'Year', 7 => 'Engine No (Optional)', 8 => 'Cylinder', 9 => 'Liters', 10 => 'Transmission', 11 => 'GEAR'),
					'display-field-names' => array(1 => 'Customer', 2 => 'VehicleType', 3 => 'VIN', 4 => 'Brand', 5 => 'Model', 6 => 'Year', 7 => 'EngineNo', 8 => 'Cylinder', 9 => 'Liters', 10 => 'Transmission', 11 => 'GEAR'),
					'sortable-fields' => array(0 => '`CustomerAuto`.`id`', 1 => '`Customers1`.`Customer`', 2 => 3, 3 => 4, 4 => '`Brand1`.`Brand`', 5 => '`Model1`.`Model`', 6 => '`CustomerAuto`.`Year`', 7 => 8, 8 => 9, 9 => 10, 10 => 11, 11 => 12, 12 => 13),
					'records-per-page' => 10,
					'default-sort-by' => false,
					'default-sort-direction' => 'asc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-CustomerAuto',
					'template-printable' => 'children-CustomerAuto-printable',
					'query' => "SELECT `CustomerAuto`.`id` as 'id', IF(    CHAR_LENGTH(`Customers1`.`Customer`), CONCAT_WS('',   `Customers1`.`Customer`), '') as 'Customer', `CustomerAuto`.`VehicleType` as 'VehicleType', `CustomerAuto`.`VIN` as 'VIN', IF(    CHAR_LENGTH(`Brand1`.`Brand`), CONCAT_WS('',   `Brand1`.`Brand`), '') as 'Brand', IF(    CHAR_LENGTH(`Model1`.`Model`), CONCAT_WS('',   `Model1`.`Model`), '') as 'Model', `CustomerAuto`.`Year` as 'Year', `CustomerAuto`.`EngineNo` as 'EngineNo', `CustomerAuto`.`Cylinder` as 'Cylinder', `CustomerAuto`.`Liters` as 'Liters', `CustomerAuto`.`Transmission` as 'Transmission', `CustomerAuto`.`GEAR` as 'GEAR', `CustomerAuto`.`URL` as 'URL' FROM `CustomerAuto` LEFT JOIN `Customers` as Customers1 ON `Customers1`.`id`=`CustomerAuto`.`Customer` LEFT JOIN `Brand` as Brand1 ON `Brand1`.`id`=`CustomerAuto`.`Brand` LEFT JOIN `Model` as Model1 ON `Model1`.`id`=`CustomerAuto`.`Model` "
				),
			),
			'Compras' => array(
			),
			'TrackingCenter' => array(
				'Name' => array(
					'parent-table' => 'Customers',
					'parent-primary-key' => 'id',
					'child-primary-key' => 'id',
					'child-primary-key-index' => 0,
					'tab-label' => 'Tracking Center <span class="hidden child-label-TrackingCenter child-field-caption">(Customer)</span>',
					'auto-close' => false,
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => array(1 => 'Date', 2 => 'Customer', 3 => 'Zone', 4 => 'Tracking', 5 => 'Carrier', 6 => 'Tracking URL (optional)', 7 => 'Customer Status', 8 => 'Tradexx status', 9 => 'Shipping type', 10 => 'Comments'),
					'display-field-names' => array(1 => 'Date', 2 => 'Name', 3 => 'Zone', 4 => 'Tracking', 5 => 'Carrier', 6 => 'Trackingurl', 7 => 'CustStatus', 8 => 'TRADEXXstatus', 9 => 'Freight', 10 => 'Comments'),
					'sortable-fields' => array(0 => '`TrackingCenter`.`id`', 1 => '`TrackingCenter`.`Date`', 2 => '`Customers1`.`Customer`', 3 => 4, 4 => '`Tracking1`.`Tracking`', 5 => 6, 6 => 7, 7 => 8, 8 => 9, 9 => 10, 10 => 11),
					'records-per-page' => 10,
					'default-sort-by' => false,
					'default-sort-direction' => 'asc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-TrackingCenter',
					'template-printable' => 'children-TrackingCenter-printable',
					'query' => "SELECT `TrackingCenter`.`id` as 'id', if(`TrackingCenter`.`Date`,date_format(`TrackingCenter`.`Date`,'%m/%d/%Y'),'') as 'Date', IF(    CHAR_LENGTH(`Customers1`.`Customer`), CONCAT_WS('',   `Customers1`.`Customer`), '') as 'Name', IF(    CHAR_LENGTH(`Province1`.`Province`), CONCAT_WS('',   `Province1`.`Province`), '') as 'Zone', IF(    CHAR_LENGTH(`Tracking1`.`Tracking`), CONCAT_WS('',   `Tracking1`.`Tracking`), '') as 'Tracking', `TrackingCenter`.`Carrier` as 'Carrier', `TrackingCenter`.`Trackingurl` as 'Trackingurl', `TrackingCenter`.`CustStatus` as 'CustStatus', `TrackingCenter`.`TRADEXXstatus` as 'TRADEXXstatus', `TrackingCenter`.`Freight` as 'Freight', `TrackingCenter`.`Comments` as 'Comments' FROM `TrackingCenter` LEFT JOIN `Customers` as Customers1 ON `Customers1`.`id`=`TrackingCenter`.`Name` LEFT JOIN `Tracking` as Tracking1 ON `Tracking1`.`id`=`TrackingCenter`.`Tracking` LEFT JOIN `Province` as Province1 ON `Province1`.`id`=`Customers1`.`Province` "
				),
			),
			'Claim' => array(
			),
			'Activities' => array(
			),
			'Return' => array(
			),
			'Department' => array(
			),
			'Position' => array(
			),
			'CEO' => array(
			),
			'Manager' => array(
			),
			'Supervisor' => array(
			),
			'Losses' => array(
			),
			'Subscriptions' => array(
			),
			'Accounting' => array(
			),
			'MasterAccount' => array(
			),
			'Account' => array(
			),
			'SubAccount' => array(
			),
			'Type' => array(
			),
			'CCJournal' => array(
			),
			'CC' => array(
			),
			'Receivable' => array(
			),
		);

	/*************************************/
	/* End of configuration */


	$currDir = dirname(__FILE__);
	include("{$currDir}/defaultLang.php");
	include("{$currDir}/language.php");
	include("{$currDir}/lib.php");
	@header('Content-Type: text/html; charset=' . datalist_db_encoding);

	handle_maintenance();

	/**
	* dynamic configuration based on current user's permissions
	* $userPCConfig array is populated only with parent tables where the user has access to
	* at least one child table
	*/
	$userPCConfig = array();
	foreach($pcConfig as $pcChildTable => $ChildrenLookups) {
		$permChild = getTablePermissions($pcChildTable);
		if($permChild[2]) { // user can view records of the child table, so proceed to check children lookups
			foreach($ChildrenLookups as $ChildLookupField => $ChildConfig) {
				$permParent = getTablePermissions($ChildConfig['parent-table']);
				if($permParent[2]) { // user can view records of parent table
					$userPCConfig[$pcChildTable][$ChildLookupField] = $pcConfig[$pcChildTable][$ChildLookupField];
					// show add new only if configured above AND the user has insert permission
					if($permChild[1] && $pcConfig[$pcChildTable][$ChildLookupField]['display-add-new']) {
						$userPCConfig[$pcChildTable][$ChildLookupField]['display-add-new'] = true;
					}else{
						$userPCConfig[$pcChildTable][$ChildLookupField]['display-add-new'] = false;
					}
				}
			}
		}
	}

	/* Receive, UTF-convert, and validate parameters */
	$ParentTable = $_REQUEST['ParentTable']; // needed only with operation=show-children, will be validated in the processing code
	$ChildTable = $_REQUEST['ChildTable'];
		if(!in_array($ChildTable, array_keys($userPCConfig))) {
			/* defaults to first child table in config array if not provided */
			$ChildTable = current(array_keys($userPCConfig));
		}
		if(!$ChildTable) { die('<!-- No tables accessible to current user -->'); }
	$SelectedID = strip_tags($_REQUEST['SelectedID']);
	$ChildLookupField = $_REQUEST['ChildLookupField'];
		if(!in_array($ChildLookupField, array_keys($userPCConfig[$ChildTable]))) {
			/* defaults to first lookup in current child config array if not provided */
			$ChildLookupField = current(array_keys($userPCConfig[$ChildTable]));
		}
	$Page = intval($_REQUEST['Page']);
		if($Page < 1) {
			$Page = 1;
		}
	$SortBy = ($_REQUEST['SortBy'] != '' ? abs(intval($_REQUEST['SortBy'])) : false);
		if(!in_array($SortBy, array_keys($userPCConfig[$ChildTable][$ChildLookupField]['sortable-fields']), true)) {
			$SortBy = $userPCConfig[$ChildTable][$ChildLookupField]['default-sort-by'];
		}
	$SortDirection = strtolower($_REQUEST['SortDirection']);
		if(!in_array($SortDirection, array('asc', 'desc'))) {
			$SortDirection = $userPCConfig[$ChildTable][$ChildLookupField]['default-sort-direction'];
		}
	$Operation = strtolower($_REQUEST['Operation']);
		if(!in_array($Operation, array('get-records', 'show-children', 'get-records-printable', 'show-children-printable'))) {
			$Operation = 'get-records';
		}

	/* process requested operation */
	switch($Operation) {
		/************************************************/
		case 'show-children':
			/* populate HTML and JS content with children tabs */
			$tabLabels = $tabPanels = $tabLoaders = '';
			foreach($userPCConfig as $ChildTable => $childLookups) {
				foreach($childLookups as $ChildLookupField => $childConfig) {
					if($childConfig['parent-table'] == $ParentTable) {
						$TableIcon = ($childConfig['table-icon'] ? "<img src=\"{$childConfig['table-icon']}\" border=\"0\" />" : '');
						$tabLabels .= sprintf('<li class="child-tab-label child-table-%s lookup-field-%s %s"><a href="#panel_%s-%s" id="tab_%s-%s" data-toggle="tab">%s%s</a></li>' . "\n\t\t\t\t\t", $ChildTable, $ChildLookupField, ($tabLabels ? '' : 'active'), $ChildTable, $ChildLookupField, $ChildTable, $ChildLookupField, $TableIcon, $childConfig['tab-label']);
						$tabPanels .= sprintf('<div id="panel_%s-%s" class="tab-pane%s"><img src="loading.gif" align="top" />%s</div>' . "\n\t\t\t\t", $ChildTable, $ChildLookupField, ($tabPanels ? '' : ' active'), $Translation['Loading ...']);
						$tabLoaders .= sprintf('post("parent-children.php", { ChildTable: "%s", ChildLookupField: "%s", SelectedID: "%s", Page: 1, SortBy: "", SortDirection: "", Operation: "get-records" }, "panel_%s-%s");' . "\n\t\t\t\t", $ChildTable, $ChildLookupField, addslashes($SelectedID), $ChildTable, $ChildLookupField);
					}
				}
			}

			if(!$tabLabels) { die('<!-- no children of current parent table are accessible to current user -->'); }
			?>
			<div id="children-tabs">
				<ul class="nav nav-tabs">
					<?php echo $tabLabels; ?>
				</ul>
				<span id="pc-loading"></span>
			</div>
			<div class="tab-content"><?php echo $tabPanels; ?></div>

			<script>
				$j(function() {
					/* for iOS, avoid loading child tabs in modals */
					var iOS = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);
					var embedded = ($j('.navbar').length == 0);
					if(iOS && embedded) {
						$j('#children-tabs').next('.tab-content').remove();
						$j('#children-tabs').remove();
						return;
					}

					/* ajax loading of each tab's contents */
					<?php echo $tabLoaders; ?>

					/* show child field caption on tab title in case the same child table appears more than once */
					$j('.child-field-caption').each(function() {
						var clss = $j(this).attr('class').split(/\s+/).reduce(function(rc, cc) {
							return (cc.match(/child-label-.*/) ? '.' + cc : rc);
						}, '');

						// if class occurs more than once, remove .hidden
						if($j(clss).length > 1) $j(clss).removeClass('hidden');
					})
				})
			</script>
			<?php
			break;

		/************************************************/
		case 'show-children-printable':
			/* populate HTML and JS content with children buttons */
			$tabLabels = $tabPanels = $tabLoaders = '';
			foreach($userPCConfig as $ChildTable => $childLookups) {
				foreach($childLookups as $ChildLookupField => $childConfig) {
					if($childConfig['parent-table'] == $ParentTable) {
						$TableIcon = ($childConfig['table-icon'] ? "<img src=\"{$childConfig['table-icon']}\" border=\"0\" />" : '');
						$tabLabels .= sprintf('<button type="button" class="btn btn-default" data-target="#panel_%s-%s" id="tab_%s-%s" data-toggle="collapse">%s %s</button>' . "\n\t\t\t\t\t", $ChildTable, $ChildLookupField, $ChildTable, $ChildLookupField, $TableIcon, $childConfig['tab-label']);
						$tabPanels .= sprintf('<div id="panel_%s-%s" class="collapse"><img src="loading.gif" align="top" />%s</div>' . "\n\t\t\t\t", $ChildTable, $ChildLookupField, $Translation['Loading ...']);
						$tabLoaders .= sprintf('post("parent-children.php", { ChildTable: "%s", ChildLookupField: "%s", SelectedID: "%s", Page: 1, SortBy: "", SortDirection: "", Operation: "get-records-printable" }, "panel_%s-%s");' . "\n\t\t\t\t", $ChildTable, $ChildLookupField, addslashes($SelectedID), $ChildTable, $ChildLookupField);
					}
				}
			}

			if(!$tabLabels) { die('<!-- no children of current parent table are accessible to current user -->'); }
			?>
			<div id="children-tabs" class="hidden-print">
				<div class="btn-group btn-group-lg">
					<?php echo $tabLabels; ?>
				</div>
				<span id="pc-loading"></span>
			</div>
			<div class="vspacer-lg"><?php echo $tabPanels; ?></div>

			<script>
				$j(function() {
					/* for iOS, avoid loading child tabs in modals */
					var iOS = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);
					var embedded = ($j('.navbar').length == 0);
					if(iOS && embedded) {
						$j('#children-tabs').next('.tab-content').remove();
						$j('#children-tabs').remove();
						return;
					}

					/* ajax loading of each tab's contents */
					<?php echo $tabLoaders; ?>
				})
			</script>
			<?php
			break;

		/************************************************/
		case 'get-records-printable':
		default: /* default is 'get-records' */

			if($Operation == 'get-records-printable') {
				$userPCConfig[$ChildTable][$ChildLookupField]['records-per-page'] = 2000;
			}

			// build the user permissions limiter
			$permissionsWhere = $permissionsJoin = '';
			$permChild = getTablePermissions($ChildTable);
			if($permChild[2] == 1) { // user can view only his own records
				$permissionsWhere = "`$ChildTable`.`{$userPCConfig[$ChildTable][$ChildLookupField]['child-primary-key']}`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='$ChildTable' AND LCASE(`membership_userrecords`.`memberID`)='".getLoggedMemberID()."'";
			}elseif($permChild[2] == 2) { // user can view only his group's records
				$permissionsWhere = "`$ChildTable`.`{$userPCConfig[$ChildTable][$ChildLookupField]['child-primary-key']}`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='$ChildTable' AND `membership_userrecords`.`groupID`='".getLoggedGroupID()."'";
			}elseif($permChild[2] == 3) { // user can view all records
				/* that's the only case remaining ... no need to modify the query in this case */
			}
			$permissionsJoin = ($permissionsWhere ? ", `membership_userrecords`" : '');

			// build the count query
			$forcedWhere = $userPCConfig[$ChildTable][$ChildLookupField]['forced-where'];
			$query = 
				preg_replace('/^select .* from /i', 'SELECT count(1) FROM ', $userPCConfig[$ChildTable][$ChildLookupField]['query']) .
				$permissionsJoin . " WHERE " .
				($permissionsWhere ? "( $permissionsWhere )" : "( 1=1 )") . " AND " .
				($forcedWhere ? "( $forcedWhere )" : "( 2=2 )") . " AND " .
				"`$ChildTable`.`$ChildLookupField`='" . makeSafe($SelectedID) . "'";
			$totalMatches = sqlValue($query);

			// make sure $Page is <= max pages
			$maxPage = ceil($totalMatches / $userPCConfig[$ChildTable][$ChildLookupField]['records-per-page']);
			if($Page > $maxPage) { $Page = $maxPage; }

			// initiate output data array
			$data = array(
				'config' => $userPCConfig[$ChildTable][$ChildLookupField],
				'parameters' => array(
					'ChildTable' => $ChildTable,
					'ChildLookupField' => $ChildLookupField,
					'SelectedID' => $SelectedID,
					'Page' => $Page,
					'SortBy' => $SortBy,
					'SortDirection' => $SortDirection,
					'Operation' => $Operation
				),
				'records' => array(),
				'totalMatches' => $totalMatches
			);

			// build the data query
			if($totalMatches) { // if we have at least one record, proceed with fetching data
				$startRecord = $userPCConfig[$ChildTable][$ChildLookupField]['records-per-page'] * ($Page - 1);
				$data['query'] = 
					$userPCConfig[$ChildTable][$ChildLookupField]['query'] .
					$permissionsJoin . " WHERE " .
					($permissionsWhere ? "( $permissionsWhere )" : "( 1=1 )") . " AND " .
					($forcedWhere ? "( $forcedWhere )" : "( 2=2 )") . " AND " .
					"`$ChildTable`.`$ChildLookupField`='" . makeSafe($SelectedID) . "'" . 
					($SortBy !== false && $userPCConfig[$ChildTable][$ChildLookupField]['sortable-fields'][$SortBy] ? " ORDER BY {$userPCConfig[$ChildTable][$ChildLookupField]['sortable-fields'][$SortBy]} $SortDirection" : '') .
					" LIMIT $startRecord, {$userPCConfig[$ChildTable][$ChildLookupField]['records-per-page']}";
				$res = sql($data['query'], $eo);
				while($row = db_fetch_row($res)) {
					$data['records'][$row[$userPCConfig[$ChildTable][$ChildLookupField]['child-primary-key-index']]] = $row;
				}
			}else{ // if no matching records
				$startRecord = 0;
			}

			if($Operation == 'get-records-printable') {
				$response = loadView($userPCConfig[$ChildTable][$ChildLookupField]['template-printable'], $data);
			}else{
				$response = loadView($userPCConfig[$ChildTable][$ChildLookupField]['template'], $data);
			}

			// change name space to ensure uniqueness
			$uniqueNameSpace = $ChildTable.ucfirst($ChildLookupField).'GetRecords';
			echo str_replace("{$ChildTable}GetChildrenRecordsList", $uniqueNameSpace, $response);
		/************************************************/
	}

<?php

// Data functions (insert, update, delete, form) for table Customers

// This script and data application were generated by AppGini 5.84
// Download AppGini for free from https://bigprof.com/appgini/download/

function Customers_insert() {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('Customers');
	if(!$arrPerm[1]) return false;

	$data = array();
	$data['Title'] = $_REQUEST['Title'];
		if($data['Title'] == empty_lookup_value) { $data['Title'] = ''; }
	$data['Customer'] = $_REQUEST['Customer'];
		if($data['Customer'] == empty_lookup_value) { $data['Customer'] = ''; }
	$data['Birthdate'] = intval($_REQUEST['BirthdateYear']) . '-' . intval($_REQUEST['BirthdateMonth']) . '-' . intval($_REQUEST['BirthdateDay']);
	$data['Birthdate'] = parseMySQLDate($data['Birthdate'], '');
	$data['Type'] = $_REQUEST['Type'];
		if($data['Type'] == empty_lookup_value) { $data['Type'] = ''; }
	$data['Phone'] = $_REQUEST['Phone'];
		if($data['Phone'] == empty_lookup_value) { $data['Phone'] = ''; }
	$data['Email'] = $_REQUEST['Email'];
		if($data['Email'] == empty_lookup_value) { $data['Email'] = ''; }
	$data['Address'] = $_REQUEST['Address'];
		if($data['Address'] == empty_lookup_value) { $data['Address'] = ''; }
	$data['City'] = $_REQUEST['City'];
		if($data['City'] == empty_lookup_value) { $data['City'] = ''; }
	$data['Province'] = $_REQUEST['Province'];
		if($data['Province'] == empty_lookup_value) { $data['Province'] = ''; }
	$data['Country'] = $_REQUEST['Country'];
		if($data['Country'] == empty_lookup_value) { $data['Country'] = ''; }
	$data['Status'] = $_REQUEST['Status'];
		if($data['Status'] == empty_lookup_value) { $data['Status'] = ''; }
	if($data['Type'] == '') $data['Type'] = "REGULAR";
	if($data['Status'] == '') $data['Status'] = "ACTIVE";

	// hook: Customers_before_insert
	if(function_exists('Customers_before_insert')) {
		$args = array();
		if(!Customers_before_insert($data, getMemberInfo(), $args)) { return false; }
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('Customers', backtick_keys_once($data), $error);
	if($error)
		die("{$error}<br><a href=\"#\" onclick=\"history.go(-1);\">{$Translation['< back']}</a>");

	$recID = db_insert_id(db_link());

	// hook: Customers_after_insert
	if(function_exists('Customers_after_insert')) {
		$res = sql("select * from `Customers` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!Customers_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('Customers', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(!empty($_REQUEST['SelectedID'])) Customers_copy_children($recID, $_REQUEST['SelectedID']);

	return $recID;
}

function Customers_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = array(); // array of curl handlers for launching insert requests
	$eo = array('silentErrors' => true);
	$uploads_dir = realpath(dirname(__FILE__) . '/../' . $Translation['ImageFolder']);
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function Customers_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('Customers');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='Customers' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='Customers' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: Customers_before_delete
	if(function_exists('Customers_before_delete')) {
		$args=array();
		if(!Customers_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	// child table: Retention
	$res = sql("select `id` from `Customers` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `Retention` where `Customer`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Retention", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Retention", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: Alert
	$res = sql("select `id` from `Customers` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `Alert` where `Customer`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Alert", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Alert", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: Tracking
	$res = sql("select `id` from `Customers` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `Tracking` where `Customer`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Tracking", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Tracking", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: Invoice
	$res = sql("select `id` from `Customers` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `Invoice` where `Customer`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Invoice", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Invoice", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: CRM
	$res = sql("select `id` from `Customers` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `CRM` where `Customer`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "CRM", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "CRM", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: CustomerAuto
	$res = sql("select `id` from `Customers` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `CustomerAuto` where `Customer`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "CustomerAuto", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "CustomerAuto", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: Compras
	$res = sql("select `id` from `Customers` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `Compras` where `Customer`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Compras", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Compras", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: TrackingCenter
	$res = sql("select `id` from `Customers` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `TrackingCenter` where `Name`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "TrackingCenter", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "TrackingCenter", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: Losses
	$res = sql("select `id` from `Customers` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `Losses` where `Customer`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Losses", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Losses", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: Subscriptions
	$res = sql("select `id` from `Customers` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `Subscriptions` where `Customer`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Subscriptions", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Subscriptions", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: Receivable
	$res = sql("select `id` from `Customers` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `Receivable` where `Customer`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Receivable", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "Receivable", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='Customers_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	sql("delete from `Customers` where `id`='$selected_id'", $eo);

	// hook: Customers_after_delete
	if(function_exists('Customers_after_delete')) {
		$args=array();
		Customers_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='Customers' and pkValue='$selected_id'", $eo);
}

function Customers_update($selected_id) {
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('Customers');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='Customers' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='Customers' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) { // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['Title'] = makeSafe($_REQUEST['Title']);
		if($data['Title'] == empty_lookup_value) { $data['Title'] = ''; }
	$data['Customer'] = makeSafe($_REQUEST['Customer']);
		if($data['Customer'] == empty_lookup_value) { $data['Customer'] = ''; }
	$data['Birthdate'] = intval($_REQUEST['BirthdateYear']) . '-' . intval($_REQUEST['BirthdateMonth']) . '-' . intval($_REQUEST['BirthdateDay']);
	$data['Birthdate'] = parseMySQLDate($data['Birthdate'], '');
	$data['Type'] = makeSafe($_REQUEST['Type']);
		if($data['Type'] == empty_lookup_value) { $data['Type'] = ''; }
	$data['Phone'] = makeSafe($_REQUEST['Phone']);
		if($data['Phone'] == empty_lookup_value) { $data['Phone'] = ''; }
	$data['Email'] = makeSafe($_REQUEST['Email']);
		if($data['Email'] == empty_lookup_value) { $data['Email'] = ''; }
	$data['Address'] = makeSafe($_REQUEST['Address']);
		if($data['Address'] == empty_lookup_value) { $data['Address'] = ''; }
	$data['City'] = makeSafe($_REQUEST['City']);
		if($data['City'] == empty_lookup_value) { $data['City'] = ''; }
	$data['Province'] = makeSafe($_REQUEST['Province']);
		if($data['Province'] == empty_lookup_value) { $data['Province'] = ''; }
	$data['Country'] = makeSafe($_REQUEST['Country']);
		if($data['Country'] == empty_lookup_value) { $data['Country'] = ''; }
	$data['Status'] = makeSafe($_REQUEST['Status']);
		if($data['Status'] == empty_lookup_value) { $data['Status'] = ''; }
	$data['selectedID'] = makeSafe($selected_id);

	// hook: Customers_before_update
	if(function_exists('Customers_before_update')) {
		$args = array();
		if(!Customers_before_update($data, getMemberInfo(), $args)) { return false; }
	}

	$o = array('silentErrors' => true);
	sql('update `Customers` set       `Title`=' . (($data['Title'] !== '' && $data['Title'] !== NULL) ? "'{$data['Title']}'" : 'NULL') . ', `Customer`=' . (($data['Customer'] !== '' && $data['Customer'] !== NULL) ? "'{$data['Customer']}'" : 'NULL') . ', `Birthdate`=' . (($data['Birthdate'] !== '' && $data['Birthdate'] !== NULL) ? "'{$data['Birthdate']}'" : 'NULL') . ', `Type`=' . (($data['Type'] !== '' && $data['Type'] !== NULL) ? "'{$data['Type']}'" : 'NULL') . ', `Phone`=' . (($data['Phone'] !== '' && $data['Phone'] !== NULL) ? "'{$data['Phone']}'" : 'NULL') . ', `Email`=' . (($data['Email'] !== '' && $data['Email'] !== NULL) ? "'{$data['Email']}'" : 'NULL') . ', `Address`=' . (($data['Address'] !== '' && $data['Address'] !== NULL) ? "'{$data['Address']}'" : 'NULL') . ', `City`=' . (($data['City'] !== '' && $data['City'] !== NULL) ? "'{$data['City']}'" : 'NULL') . ', `Province`=' . (($data['Province'] !== '' && $data['Province'] !== NULL) ? "'{$data['Province']}'" : 'NULL') . ', `Country`=' . (($data['Country'] !== '' && $data['Country'] !== NULL) ? "'{$data['Country']}'" : 'NULL') . ', `Status`=' . (($data['Status'] !== '' && $data['Status'] !== NULL) ? "'{$data['Status']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!='') {
		echo $o['error'];
		echo '<a href="Customers_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: Customers_after_update
	if(function_exists('Customers_after_update')) {
		$res = sql("SELECT * FROM `Customers` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!Customers_after_update($data, getMemberInfo(), $args)) { return; }
	}

	// mm: update ownership data
	sql("update `membership_userrecords` set `dateUpdated`='" . time() . "' where `tableName`='Customers' and `pkValue`='" . makeSafe($selected_id) . "'", $eo);

}

function Customers_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('Customers');
	if(!$arrPerm[1] && $selected_id=='') { return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != '') {
		$dvprint = true;
	}

	$filterer_Type = thisOr(undo_magic_quotes($_REQUEST['filterer_Type']), '');
	$filterer_City = thisOr(undo_magic_quotes($_REQUEST['filterer_City']), '');
	$filterer_Province = thisOr(undo_magic_quotes($_REQUEST['filterer_Province']), '');
	$filterer_Country = thisOr(undo_magic_quotes($_REQUEST['filterer_Country']), '');

	// populate filterers, starting from children to grand-parents
	if($filterer_City && !$filterer_Province) $filterer_Province = sqlValue("select Province from City where id='" . makeSafe($filterer_City) . "'");
	if($filterer_Province && !$filterer_Country) $filterer_Country = sqlValue("select Country from Province where id='" . makeSafe($filterer_Province) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: Title
	$combo_Title = new Combo;
	$combo_Title->ListType = 0;
	$combo_Title->MultipleSeparator = ', ';
	$combo_Title->ListBoxHeight = 10;
	$combo_Title->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/Customers.Title.csv')) {
		$Title_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/Customers.Title.csv')));
		$combo_Title->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($Title_data)));
		$combo_Title->ListData = $combo_Title->ListItem;
	}else{
		$combo_Title->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("SR.;;SRA.;;JR.;;MR.;;MS.")));
		$combo_Title->ListData = $combo_Title->ListItem;
	}
	$combo_Title->SelectName = 'Title';
	// combobox: Birthdate
	$combo_Birthdate = new DateCombo;
	$combo_Birthdate->DateFormat = "mdy";
	$combo_Birthdate->MinYear = 1900;
	$combo_Birthdate->MaxYear = 2100;
	$combo_Birthdate->DefaultDate = parseMySQLDate('', '');
	$combo_Birthdate->MonthNames = $Translation['month names'];
	$combo_Birthdate->NamePrefix = 'Birthdate';
	// combobox: Type
	$combo_Type = new DataCombo;
	// combobox: City, filterable by: Province
	$combo_City = new DataCombo;
	// combobox: Province, filterable by: Country
	$combo_Province = new DataCombo;
	// combobox: Country
	$combo_Country = new DataCombo;
	// combobox: Status
	$combo_Status = new Combo;
	$combo_Status->ListType = 0;
	$combo_Status->MultipleSeparator = ', ';
	$combo_Status->ListBoxHeight = 10;
	$combo_Status->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/Customers.Status.csv')) {
		$Status_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/Customers.Status.csv')));
		$combo_Status->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($Status_data)));
		$combo_Status->ListData = $combo_Status->ListItem;
	}else{
		$combo_Status->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("ACTIVE;;INACTIVE;;RED FLAGGED")));
		$combo_Status->ListData = $combo_Status->ListItem;
	}
	$combo_Status->SelectName = 'Status';

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm[2]) {
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='Customers' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='Customers' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID) {
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID) {
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) {
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("SELECT * FROM `Customers` WHERE `id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'Customers_view.php', false);
		}
		$combo_Title->SelectedData = $row['Title'];
		$combo_Birthdate->DefaultDate = $row['Birthdate'];
		$combo_Type->SelectedData = $row['Type'];
		$combo_City->SelectedData = $row['City'];
		$combo_Province->SelectedData = $row['Province'];
		$combo_Country->SelectedData = $row['Country'];
		$combo_Status->SelectedData = $row['Status'];
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
	} else {
		$combo_Title->SelectedText = ( $_REQUEST['FilterField'][1]=='2' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_Type->SelectedData = $filterer_Type;
		$combo_City->SelectedData = $filterer_City;
		$combo_Province->SelectedData = $filterer_Province;
		$combo_Country->SelectedData = $filterer_Country;
		$combo_Status->SelectedText = ( $_REQUEST['FilterField'][1]=='12' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "ACTIVE");
	}
	$combo_Title->Render();
	$combo_Type->HTML = '<span id="Type-container' . $rnd1 . '"></span><input type="hidden" name="Type" id="Type' . $rnd1 . '" value="' . html_attr($combo_Type->SelectedData) . '">';
	$combo_Type->MatchText = '<span id="Type-container-readonly' . $rnd1 . '"></span><input type="hidden" name="Type" id="Type' . $rnd1 . '" value="' . html_attr($combo_Type->SelectedData) . '">';
	$combo_City->HTML = '<span id="City-container' . $rnd1 . '"></span><input type="hidden" name="City" id="City' . $rnd1 . '" value="' . html_attr($combo_City->SelectedData) . '">';
	$combo_City->MatchText = '<span id="City-container-readonly' . $rnd1 . '"></span><input type="hidden" name="City" id="City' . $rnd1 . '" value="' . html_attr($combo_City->SelectedData) . '">';
	$combo_Province->HTML = '<span id="Province-container' . $rnd1 . '"></span><input type="hidden" name="Province" id="Province' . $rnd1 . '" value="' . html_attr($combo_Province->SelectedData) . '">';
	$combo_Province->MatchText = '<span id="Province-container-readonly' . $rnd1 . '"></span><input type="hidden" name="Province" id="Province' . $rnd1 . '" value="' . html_attr($combo_Province->SelectedData) . '">';
	$combo_Country->HTML = '<span id="Country-container' . $rnd1 . '"></span><input type="hidden" name="Country" id="Country' . $rnd1 . '" value="' . html_attr($combo_Country->SelectedData) . '">';
	$combo_Country->MatchText = '<span id="Country-container-readonly' . $rnd1 . '"></span><input type="hidden" name="Country" id="Country' . $rnd1 . '" value="' . html_attr($combo_Country->SelectedData) . '">';
	$combo_Status->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_Type__RAND__ = { text: "<?php echo ($selected_id ? '' : 'REGULAR'); ?>", value: "<?php echo addslashes($selected_id ? $urow['Type'] : $filterer_Type); ?>"};
		AppGini.current_City__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['City'] : $filterer_City); ?>"};
		AppGini.current_Province__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['Province'] : $filterer_Province); ?>"};
		AppGini.current_Country__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['Country'] : $filterer_Country); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(Type_reload__RAND__) == 'function') Type_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(City_reload__RAND__) == \'function\') City_reload__RAND__(AppGini.current_Province__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(Province_reload__RAND__) == \'function\') Province_reload__RAND__(AppGini.current_Country__RAND__.value);' : ''); ?>
				if(typeof(Country_reload__RAND__) == 'function') Country_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function Type_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#Type-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						<?php if(!$selected_id && !$filterer_Type) { ?>
							data: { text: 'REGULAR', t: 'Customers', f: 'Type' },
						<?php }else{ ?>
							data: { id: AppGini.current_Type__RAND__.value, t: 'Customers', f: 'Type' },
						<?php } ?>

						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="Type"]').val(resp.results[0].id);
							$j('[id=Type-container-readonly__RAND__]').html('<span id="Type-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CustomerClass_view_parent]').hide(); }else{ $j('.btn[id=CustomerClass_view_parent]').show(); }


							if(typeof(Type_update_autofills__RAND__) == 'function') Type_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { s: term, p: page, t: 'Customers', f: 'Type' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_Type__RAND__.value = e.added.id;
				AppGini.current_Type__RAND__.text = e.added.text;
				$j('[name="Type"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CustomerClass_view_parent]').hide(); }else{ $j('.btn[id=CustomerClass_view_parent]').show(); }


				if(typeof(Type_update_autofills__RAND__) == 'function') Type_update_autofills__RAND__();
			});

			if(!$j("#Type-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_Type__RAND__.value, t: 'Customers', f: 'Type' },
					success: function(resp) {
						$j('[name="Type"]').val(resp.results[0].id);
						$j('[id=Type-container-readonly__RAND__]').html('<span id="Type-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CustomerClass_view_parent]').hide(); }else{ $j('.btn[id=CustomerClass_view_parent]').show(); }

						if(typeof(Type_update_autofills__RAND__) == 'function') Type_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_Type__RAND__.value, t: 'Customers', f: 'Type' },
				success: function(resp) {
					$j('[id=Type-container__RAND__], [id=Type-container-readonly__RAND__]').html('<span id="Type-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CustomerClass_view_parent]').hide(); }else{ $j('.btn[id=CustomerClass_view_parent]').show(); }

					if(typeof(Type_update_autofills__RAND__) == 'function') Type_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function City_reload__RAND__(filterer_Province) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#City-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_Province: filterer_Province, id: AppGini.current_City__RAND__.value, t: 'Customers', f: 'City' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="City"]').val(resp.results[0].id);
							$j('[id=City-container-readonly__RAND__]').html('<span id="City-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=City_view_parent]').hide(); }else{ $j('.btn[id=City_view_parent]').show(); }


							if(typeof(City_update_autofills__RAND__) == 'function') City_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { filterer_Province: filterer_Province, s: term, p: page, t: 'Customers', f: 'City' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_City__RAND__.value = e.added.id;
				AppGini.current_City__RAND__.text = e.added.text;
				$j('[name="City"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=City_view_parent]').hide(); }else{ $j('.btn[id=City_view_parent]').show(); }


				if(typeof(City_update_autofills__RAND__) == 'function') City_update_autofills__RAND__();
			});

			if(!$j("#City-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_City__RAND__.value, t: 'Customers', f: 'City' },
					success: function(resp) {
						$j('[name="City"]').val(resp.results[0].id);
						$j('[id=City-container-readonly__RAND__]').html('<span id="City-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=City_view_parent]').hide(); }else{ $j('.btn[id=City_view_parent]').show(); }

						if(typeof(City_update_autofills__RAND__) == 'function') City_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_City__RAND__.value, t: 'Customers', f: 'City' },
				success: function(resp) {
					$j('[id=City-container__RAND__], [id=City-container-readonly__RAND__]').html('<span id="City-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=City_view_parent]').hide(); }else{ $j('.btn[id=City_view_parent]').show(); }

					if(typeof(City_update_autofills__RAND__) == 'function') City_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function Province_reload__RAND__(filterer_Country) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#Province-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_Country: filterer_Country, id: AppGini.current_Province__RAND__.value, t: 'Customers', f: 'Province' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="Province"]').val(resp.results[0].id);
							$j('[id=Province-container-readonly__RAND__]').html('<span id="Province-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=Province_view_parent]').hide(); }else{ $j('.btn[id=Province_view_parent]').show(); }

						if(typeof(City_reload__RAND__) == 'function') City_reload__RAND__(AppGini.current_Province__RAND__.value);

							if(typeof(Province_update_autofills__RAND__) == 'function') Province_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { filterer_Country: filterer_Country, s: term, p: page, t: 'Customers', f: 'Province' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_Province__RAND__.value = e.added.id;
				AppGini.current_Province__RAND__.text = e.added.text;
				$j('[name="Province"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=Province_view_parent]').hide(); }else{ $j('.btn[id=Province_view_parent]').show(); }

						if(typeof(City_reload__RAND__) == 'function') City_reload__RAND__(AppGini.current_Province__RAND__.value);

				if(typeof(Province_update_autofills__RAND__) == 'function') Province_update_autofills__RAND__();
			});

			if(!$j("#Province-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_Province__RAND__.value, t: 'Customers', f: 'Province' },
					success: function(resp) {
						$j('[name="Province"]').val(resp.results[0].id);
						$j('[id=Province-container-readonly__RAND__]').html('<span id="Province-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=Province_view_parent]').hide(); }else{ $j('.btn[id=Province_view_parent]').show(); }

						if(typeof(Province_update_autofills__RAND__) == 'function') Province_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_Province__RAND__.value, t: 'Customers', f: 'Province' },
				success: function(resp) {
					$j('[id=Province-container__RAND__], [id=Province-container-readonly__RAND__]').html('<span id="Province-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=Province_view_parent]').hide(); }else{ $j('.btn[id=Province_view_parent]').show(); }

					if(typeof(Province_update_autofills__RAND__) == 'function') Province_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function Country_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#Country-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_Country__RAND__.value, t: 'Customers', f: 'Country' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="Country"]').val(resp.results[0].id);
							$j('[id=Country-container-readonly__RAND__]').html('<span id="Country-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=Country_view_parent]').hide(); }else{ $j('.btn[id=Country_view_parent]').show(); }

						if(typeof(Province_reload__RAND__) == 'function') Province_reload__RAND__(AppGini.current_Country__RAND__.value);

							if(typeof(Country_update_autofills__RAND__) == 'function') Country_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { s: term, p: page, t: 'Customers', f: 'Country' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_Country__RAND__.value = e.added.id;
				AppGini.current_Country__RAND__.text = e.added.text;
				$j('[name="Country"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=Country_view_parent]').hide(); }else{ $j('.btn[id=Country_view_parent]').show(); }

						if(typeof(Province_reload__RAND__) == 'function') Province_reload__RAND__(AppGini.current_Country__RAND__.value);

				if(typeof(Country_update_autofills__RAND__) == 'function') Country_update_autofills__RAND__();
			});

			if(!$j("#Country-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_Country__RAND__.value, t: 'Customers', f: 'Country' },
					success: function(resp) {
						$j('[name="Country"]').val(resp.results[0].id);
						$j('[id=Country-container-readonly__RAND__]').html('<span id="Country-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=Country_view_parent]').hide(); }else{ $j('.btn[id=Country_view_parent]').show(); }

						if(typeof(Country_update_autofills__RAND__) == 'function') Country_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_Country__RAND__.value, t: 'Customers', f: 'Country' },
				success: function(resp) {
					$j('[id=Country-container__RAND__], [id=Country-container-readonly__RAND__]').html('<span id="Country-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=Country_view_parent]').hide(); }else{ $j('.btn[id=Country_view_parent]').show(); }

					if(typeof(Country_update_autofills__RAND__) == 'function') Country_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/Customers_templateDV.html';
	$templateCode = @file_get_contents($template_file);

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Customer details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return Customers_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return Customers_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return Customers_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly .= "\tjQuery('#Title').replaceWith('<div class=\"form-control-static\" id=\"Title\">' + (jQuery('#Title').val() || '') + '</div>'); jQuery('#Title-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#Customer').replaceWith('<div class=\"form-control-static\" id=\"Customer\">' + (jQuery('#Customer').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Birthdate').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#BirthdateDay, #BirthdateMonth, #BirthdateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#Type').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#Type_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#Phone').replaceWith('<div class=\"form-control-static\" id=\"Phone\">' + (jQuery('#Phone').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Email').replaceWith('<div class=\"form-control-static\" id=\"Email\">' + (jQuery('#Email').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Address').replaceWith('<div class=\"form-control-static\" id=\"Address\">' + (jQuery('#Address').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#City').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#City_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#Province').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#Province_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#Country').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#Country_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#Status').replaceWith('<div class=\"form-control-static\" id=\"Status\">' + (jQuery('#Status').val() || '') + '</div>'); jQuery('#Status-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert) {
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(Title)%%>', $combo_Title->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(Title)%%>', $combo_Title->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(Birthdate)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_Birthdate->GetHTML(true) . '</div>' : $combo_Birthdate->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(Birthdate)%%>', $combo_Birthdate->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(Type)%%>', $combo_Type->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(Type)%%>', $combo_Type->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(Type)%%>', urlencode($combo_Type->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(City)%%>', $combo_City->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(City)%%>', $combo_City->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(City)%%>', urlencode($combo_City->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(Province)%%>', $combo_Province->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(Province)%%>', $combo_Province->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(Province)%%>', urlencode($combo_Province->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(Country)%%>', $combo_Country->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(Country)%%>', $combo_Country->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(Country)%%>', urlencode($combo_Country->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(Status)%%>', $combo_Status->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(Status)%%>', $combo_Status->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array('Type' => array('CustomerClass', 'Type'), 'City' => array('City', 'City'), 'Province' => array('Province', 'Province'), 'Country' => array('Country', 'Country'), );
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Title)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Customer)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Birthdate)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Type)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Phone)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Email)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Address)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(City)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Province)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Country)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Status)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Title)%%>', safe_html($urow['Title']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Title)%%>', html_attr($row['Title']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Title)%%>', urlencode($urow['Title']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Customer)%%>', safe_html($urow['Customer']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Customer)%%>', html_attr($row['Customer']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Customer)%%>', urlencode($urow['Customer']), $templateCode);
		$templateCode = str_replace('<%%VALUE(Birthdate)%%>', @date('m/d/Y', @strtotime(html_attr($row['Birthdate']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Birthdate)%%>', urlencode(@date('m/d/Y', @strtotime(html_attr($urow['Birthdate'])))), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Type)%%>', safe_html($urow['Type']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Type)%%>', html_attr($row['Type']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Type)%%>', urlencode($urow['Type']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Phone)%%>', safe_html($urow['Phone']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Phone)%%>', html_attr($row['Phone']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Phone)%%>', urlencode($urow['Phone']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Email)%%>', safe_html($urow['Email']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Email)%%>', html_attr($row['Email']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Email)%%>', urlencode($urow['Email']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Address)%%>', safe_html($urow['Address']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Address)%%>', html_attr($row['Address']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Address)%%>', urlencode($urow['Address']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(City)%%>', safe_html($urow['City']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(City)%%>', html_attr($row['City']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(City)%%>', urlencode($urow['City']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Province)%%>', safe_html($urow['Province']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Province)%%>', html_attr($row['Province']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Province)%%>', urlencode($urow['Province']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Country)%%>', safe_html($urow['Country']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Country)%%>', html_attr($row['Country']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Country)%%>', urlencode($urow['Country']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Status)%%>', safe_html($urow['Status']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Status)%%>', html_attr($row['Status']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Status)%%>', urlencode($urow['Status']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Title)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Title)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Customer)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Customer)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Birthdate)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Birthdate)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Type)%%>', 'REGULAR', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Type)%%>', urlencode('REGULAR'), $templateCode);
		$templateCode = str_replace('<%%VALUE(Phone)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Phone)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Email)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Email)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Address)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Address)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(City)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(City)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Province)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Province)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Country)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Country)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Status)%%>', 'ACTIVE', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Status)%%>', urlencode('ACTIVE'), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans) {
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('Customers');
	if($selected_id) {
		$jdata = get_joined_record('Customers', $selected_id);
		if($jdata === false) $jdata = get_defaults('Customers');
		$rdata = $row;
	}
	$templateCode .= loadView('Customers-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: Customers_dv
	if(function_exists('Customers_dv')) {
		$args=array();
		Customers_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>
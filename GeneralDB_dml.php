<?php

// Data functions (insert, update, delete, form) for table GeneralDB

// This script and data application were generated by AppGini 5.84
// Download AppGini for free from https://bigprof.com/appgini/download/

function GeneralDB_insert() {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('GeneralDB');
	if(!$arrPerm[1]) return false;

	$data = array();
	$data['Description'] = $_REQUEST['Description'];
		if($data['Description'] == empty_lookup_value) { $data['Description'] = ''; }
	$data['Dimensions'] = $_REQUEST['Dimensions'];
		if($data['Dimensions'] == empty_lookup_value) { $data['Dimensions'] = ''; }
	$data['Vweight'] = $_REQUEST['Vweight'];
		if($data['Vweight'] == empty_lookup_value) { $data['Vweight'] = ''; }
	$data['Rweight'] = $_REQUEST['Rweight'];
		if($data['Rweight'] == empty_lookup_value) { $data['Rweight'] = ''; }
	$data['Ofreight'] = $_REQUEST['Ofreight'];
		if($data['Ofreight'] == empty_lookup_value) { $data['Ofreight'] = ''; }
	$data['Afreight'] = $_REQUEST['Afreight'];
		if($data['Afreight'] == empty_lookup_value) { $data['Afreight'] = ''; }
	$data['photo'] = PrepareUploadedFile('photo', 512000,'jpg|jpeg|gif|png', false, '');
	if($data['photo']) createThumbnail($data['photo'], getThumbnailSpecs('GeneralDB', 'photo', 'tv'));
	if($data['photo']) createThumbnail($data['photo'], getThumbnailSpecs('GeneralDB', 'photo', 'dv'));

	/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
	if($_REQUEST['SelectedID']) {
		$res = sql("select * from GeneralDB where id='" . makeSafe($_REQUEST['SelectedID']) . "'", $eo);
		if($row = db_fetch_assoc($res)) {
			if(!$data['photo']) $data['photo'] = $row['photo'];
		}
	}

	// hook: GeneralDB_before_insert
	if(function_exists('GeneralDB_before_insert')) {
		$args = array();
		if(!GeneralDB_before_insert($data, getMemberInfo(), $args)) { return false; }
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('GeneralDB', backtick_keys_once($data), $error);
	if($error)
		die("{$error}<br><a href=\"#\" onclick=\"history.go(-1);\">{$Translation['< back']}</a>");

	$recID = db_insert_id(db_link());

	// hook: GeneralDB_after_insert
	if(function_exists('GeneralDB_after_insert')) {
		$res = sql("select * from `GeneralDB` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!GeneralDB_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('GeneralDB', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(!empty($_REQUEST['SelectedID'])) GeneralDB_copy_children($recID, $_REQUEST['SelectedID']);

	return $recID;
}

function GeneralDB_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = array(); // array of curl handlers for launching insert requests
	$eo = array('silentErrors' => true);
	$uploads_dir = realpath(dirname(__FILE__) . '/../' . $Translation['ImageFolder']);
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function GeneralDB_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('GeneralDB');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='GeneralDB' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='GeneralDB' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: GeneralDB_before_delete
	if(function_exists('GeneralDB_before_delete')) {
		$args=array();
		if(!GeneralDB_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `GeneralDB` where `id`='$selected_id'", $eo);

	// hook: GeneralDB_after_delete
	if(function_exists('GeneralDB_after_delete')) {
		$args=array();
		GeneralDB_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='GeneralDB' and pkValue='$selected_id'", $eo);
}

function GeneralDB_update($selected_id) {
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('GeneralDB');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='GeneralDB' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='GeneralDB' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) { // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['Description'] = makeSafe($_REQUEST['Description']);
		if($data['Description'] == empty_lookup_value) { $data['Description'] = ''; }
	$data['Dimensions'] = makeSafe($_REQUEST['Dimensions']);
		if($data['Dimensions'] == empty_lookup_value) { $data['Dimensions'] = ''; }
	$data['Vweight'] = makeSafe($_REQUEST['Vweight']);
		if($data['Vweight'] == empty_lookup_value) { $data['Vweight'] = ''; }
	$data['Rweight'] = makeSafe($_REQUEST['Rweight']);
		if($data['Rweight'] == empty_lookup_value) { $data['Rweight'] = ''; }
	$data['Ofreight'] = makeSafe($_REQUEST['Ofreight']);
		if($data['Ofreight'] == empty_lookup_value) { $data['Ofreight'] = ''; }
	$data['Afreight'] = makeSafe($_REQUEST['Afreight']);
		if($data['Afreight'] == empty_lookup_value) { $data['Afreight'] = ''; }
	$data['selectedID'] = makeSafe($selected_id);
	if($_REQUEST['photo_remove'] == 1) {
		$data['photo'] = '';
	} else {
		$data['photo'] = PrepareUploadedFile('photo', 512000, 'jpg|jpeg|gif|png', false, "");
		if($data['photo']) createThumbnail($data['photo'], getThumbnailSpecs('GeneralDB', 'photo', 'tv'));
		if($data['photo']) createThumbnail($data['photo'], getThumbnailSpecs('GeneralDB', 'photo', 'dv'));
	}

	// hook: GeneralDB_before_update
	if(function_exists('GeneralDB_before_update')) {
		$args = array();
		if(!GeneralDB_before_update($data, getMemberInfo(), $args)) { return false; }
	}

	$o = array('silentErrors' => true);
	sql('update `GeneralDB` set       `Description`=' . (($data['Description'] !== '' && $data['Description'] !== NULL) ? "'{$data['Description']}'" : 'NULL') . ', `Dimensions`=' . (($data['Dimensions'] !== '' && $data['Dimensions'] !== NULL) ? "'{$data['Dimensions']}'" : 'NULL') . ', `Vweight`=' . (($data['Vweight'] !== '' && $data['Vweight'] !== NULL) ? "'{$data['Vweight']}'" : 'NULL') . ', `Rweight`=' . (($data['Rweight'] !== '' && $data['Rweight'] !== NULL) ? "'{$data['Rweight']}'" : 'NULL') . ', `Ofreight`=' . (($data['Ofreight'] !== '' && $data['Ofreight'] !== NULL) ? "'{$data['Ofreight']}'" : 'NULL') . ', `Afreight`=' . (($data['Afreight'] !== '' && $data['Afreight'] !== NULL) ? "'{$data['Afreight']}'" : 'NULL') . ', ' . ($data['photo']!='' ? "`photo`='{$data['photo']}'" : ($_REQUEST['photo_remove'] != 1 ? '`photo`=`photo`' : '`photo`=NULL')) . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!='') {
		echo $o['error'];
		echo '<a href="GeneralDB_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: GeneralDB_after_update
	if(function_exists('GeneralDB_after_update')) {
		$res = sql("SELECT * FROM `GeneralDB` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!GeneralDB_after_update($data, getMemberInfo(), $args)) { return; }
	}

	// mm: update ownership data
	sql("update `membership_userrecords` set `dateUpdated`='" . time() . "' where `tableName`='GeneralDB' and `pkValue`='" . makeSafe($selected_id) . "'", $eo);

}

function GeneralDB_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('GeneralDB');
	if(!$arrPerm[1] && $selected_id=='') { return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != '') {
		$dvprint = true;
	}


	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm[2]) {
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='GeneralDB' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='GeneralDB' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID) {
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID) {
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) {
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("SELECT * FROM `GeneralDB` WHERE `id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'GeneralDB_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
	} else {
	}

	ob_start();
	?>

	<script>
		// initial lookup values

		jQuery(function() {
			setTimeout(function() {
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/GeneralDB_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/GeneralDB_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Database details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return GeneralDB_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return GeneralDB_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return GeneralDB_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly .= "\tjQuery('#Dimensions').replaceWith('<div class=\"form-control-static\" id=\"Dimensions\">' + (jQuery('#Dimensions').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Vweight').replaceWith('<div class=\"form-control-static\" id=\"Vweight\">' + (jQuery('#Vweight').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Rweight').replaceWith('<div class=\"form-control-static\" id=\"Rweight\">' + (jQuery('#Rweight').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Ofreight').replaceWith('<div class=\"form-control-static\" id=\"Ofreight\">' + (jQuery('#Ofreight').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Afreight').replaceWith('<div class=\"form-control-static\" id=\"Afreight\">' + (jQuery('#Afreight').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#photo').replaceWith('<div class=\"form-control-static\" id=\"photo\">' + (jQuery('#photo').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert) {
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array();
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Description)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Dimensions)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Vweight)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Rweight)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Ofreight)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Afreight)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(photo)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="photo" id="photo" data-filetypes="jpg|jpeg|gif|png" data-maxsize="512000">'), $templateCode);
	if($AllowUpdate && $row['photo'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(photo)%%>', '<br><input type="checkbox" name="photo_remove" id="photo_remove" value="1"> <label for="photo_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	}else{
		$templateCode = str_replace('<%%REMOVEFILE(photo)%%>', '', $templateCode);
	}

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(Description)%%>', '<textarea name="Description" id="Description" rows="5">' . html_attr($row['Description']) . '</textarea>', $templateCode);
		}else{
			$templateCode = str_replace('<%%HTMLAREA(Description)%%>', '<div id="Description" class="form-control-static">' . $row['Description'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(Description)%%>', nl2br($row['Description']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Description)%%>', urlencode($urow['Description']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Dimensions)%%>', safe_html($urow['Dimensions']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Dimensions)%%>', html_attr($row['Dimensions']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Dimensions)%%>', urlencode($urow['Dimensions']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Vweight)%%>', safe_html($urow['Vweight']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Vweight)%%>', html_attr($row['Vweight']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Vweight)%%>', urlencode($urow['Vweight']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Rweight)%%>', safe_html($urow['Rweight']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Rweight)%%>', html_attr($row['Rweight']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Rweight)%%>', urlencode($urow['Rweight']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Ofreight)%%>', safe_html($urow['Ofreight']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Ofreight)%%>', html_attr($row['Ofreight']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Ofreight)%%>', urlencode($urow['Ofreight']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Afreight)%%>', safe_html($urow['Afreight']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Afreight)%%>', html_attr($row['Afreight']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Afreight)%%>', urlencode($urow['Afreight']), $templateCode);
		$row['photo'] = ($row['photo'] != '' ? $row['photo'] : 'blank.gif');
		if( $dvprint) $templateCode = str_replace('<%%VALUE(photo)%%>', safe_html($urow['photo']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(photo)%%>', html_attr($row['photo']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(photo)%%>', urlencode($urow['photo']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(Description)%%>', '<textarea name="Description" id="Description" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(Dimensions)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Dimensions)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Vweight)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Vweight)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Rweight)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Rweight)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Ofreight)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Ofreight)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Afreight)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Afreight)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(photo)%%>', 'blank.gif', $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans) {
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('GeneralDB');
	if($selected_id) {
		$jdata = get_joined_record('GeneralDB', $selected_id);
		if($jdata === false) $jdata = get_defaults('GeneralDB');
		$rdata = $row;
	}
	$templateCode .= loadView('GeneralDB-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: GeneralDB_dv
	if(function_exists('GeneralDB_dv')) {
		$args=array();
		GeneralDB_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>
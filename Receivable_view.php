<?php
// This script and data application were generated by AppGini 5.84
// Download AppGini for free from https://bigprof.com/appgini/download/

	$currDir=dirname(__FILE__);
	include("$currDir/defaultLang.php");
	include("$currDir/language.php");
	include("$currDir/lib.php");
	@include("$currDir/hooks/Receivable.php");
	include("$currDir/Receivable_dml.php");

	// mm: can the current member access this page?
	$perm=getTablePermissions('Receivable');
	if(!$perm[0]) {
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout("window.location=\'index.php?signOut=1\'", 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = "Receivable";

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = array(
		"`Receivable`.`id`" => "id",
		"IF(    CHAR_LENGTH(`Customers1`.`Customer`), CONCAT_WS('',   `Customers1`.`Customer`), '') /* Customer */" => "Customer",
		"IF(    CHAR_LENGTH(`Customers1`.`Phone`), CONCAT_WS('',   `Customers1`.`Phone`), '') /* Phone */" => "Phone",
		"`Receivable`.`Description`" => "Description",
		"`Receivable`.`Interaction`" => "Interaction",
		"if(`Receivable`.`ExpectedDate`,date_format(`Receivable`.`ExpectedDate`,'%m/%d/%Y'),'')" => "ExpectedDate",
		"if(`Receivable`.`LastUpdate`,date_format(`Receivable`.`LastUpdate`,'%m/%d/%Y %h:%i %p'),'')" => "LastUpdate",
		"`Receivable`.`Status`" => "Status",
		"IF(    CHAR_LENGTH(`Staff1`.`Employee`), CONCAT_WS('',   `Staff1`.`Employee`), '') /* Assigned */" => "Assigned",
		"`Receivable`.`Amount`" => "Amount",
	);
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = array(
		1 => '`Receivable`.`id`',
		2 => '`Customers1`.`Customer`',
		3 => '`Customers1`.`Phone`',
		4 => 4,
		5 => 5,
		6 => '`Receivable`.`ExpectedDate`',
		7 => '`Receivable`.`LastUpdate`',
		8 => 8,
		9 => '`Staff1`.`Employee`',
		10 => '`Receivable`.`Amount`',
	);

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = array(
		"`Receivable`.`id`" => "id",
		"IF(    CHAR_LENGTH(`Customers1`.`Customer`), CONCAT_WS('',   `Customers1`.`Customer`), '') /* Customer */" => "Customer",
		"IF(    CHAR_LENGTH(`Customers1`.`Phone`), CONCAT_WS('',   `Customers1`.`Phone`), '') /* Phone */" => "Phone",
		"`Receivable`.`Description`" => "Description",
		"`Receivable`.`Interaction`" => "Interaction",
		"if(`Receivable`.`ExpectedDate`,date_format(`Receivable`.`ExpectedDate`,'%m/%d/%Y'),'')" => "ExpectedDate",
		"if(`Receivable`.`LastUpdate`,date_format(`Receivable`.`LastUpdate`,'%m/%d/%Y %h:%i %p'),'')" => "LastUpdate",
		"`Receivable`.`Status`" => "Status",
		"IF(    CHAR_LENGTH(`Staff1`.`Employee`), CONCAT_WS('',   `Staff1`.`Employee`), '') /* Assigned */" => "Assigned",
		"`Receivable`.`Amount`" => "Amount",
	);
	// Fields that can be filtered
	$x->QueryFieldsFilters = array(
		"`Receivable`.`id`" => "ID",
		"IF(    CHAR_LENGTH(`Customers1`.`Customer`), CONCAT_WS('',   `Customers1`.`Customer`), '') /* Customer */" => "Customer",
		"IF(    CHAR_LENGTH(`Customers1`.`Phone`), CONCAT_WS('',   `Customers1`.`Phone`), '') /* Phone */" => "Phone",
		"`Receivable`.`Description`" => "Description",
		"`Receivable`.`Interaction`" => "Interaction",
		"`Receivable`.`ExpectedDate`" => "Expected payment date",
		"`Receivable`.`LastUpdate`" => "Last Update",
		"`Receivable`.`Status`" => "Status",
		"IF(    CHAR_LENGTH(`Staff1`.`Employee`), CONCAT_WS('',   `Staff1`.`Employee`), '') /* Assigned */" => "Assigned",
		"`Receivable`.`Amount`" => "Amount",
	);

	// Fields that can be quick searched
	$x->QueryFieldsQS = array(
		"`Receivable`.`id`" => "id",
		"IF(    CHAR_LENGTH(`Customers1`.`Customer`), CONCAT_WS('',   `Customers1`.`Customer`), '') /* Customer */" => "Customer",
		"IF(    CHAR_LENGTH(`Customers1`.`Phone`), CONCAT_WS('',   `Customers1`.`Phone`), '') /* Phone */" => "Phone",
		"`Receivable`.`Description`" => "Description",
		"`Receivable`.`Interaction`" => "Interaction",
		"if(`Receivable`.`ExpectedDate`,date_format(`Receivable`.`ExpectedDate`,'%m/%d/%Y'),'')" => "ExpectedDate",
		"if(`Receivable`.`LastUpdate`,date_format(`Receivable`.`LastUpdate`,'%m/%d/%Y %h:%i %p'),'')" => "LastUpdate",
		"`Receivable`.`Status`" => "Status",
		"IF(    CHAR_LENGTH(`Staff1`.`Employee`), CONCAT_WS('',   `Staff1`.`Employee`), '') /* Assigned */" => "Assigned",
		"`Receivable`.`Amount`" => "Amount",
	);

	// Lookup fields that can be used as filterers
	$x->filterers = array('Customer' => 'Customer', 'Assigned' => 'Assigned', );

	$x->QueryFrom = "`Receivable` LEFT JOIN `Customers` as Customers1 ON `Customers1`.`id`=`Receivable`.`Customer` LEFT JOIN `Staff` as Staff1 ON `Staff1`.`id`=`Receivable`.`Assigned` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm[2]==0 ? 1 : 0);
	$x->AllowDelete = $perm[4];
	$x->AllowMassDelete = true;
	$x->AllowInsert = $perm[1];
	$x->AllowUpdate = $perm[3];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 0;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 300;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation["quick search"];
	$x->ScriptFileName = "Receivable_view.php";
	$x->RedirectAfterInsert = "Receivable_view.php?SelectedID=#ID#";
	$x->TableTitle = "Receivable";
	$x->TableIcon = "resources/table_icons/Account receivable.png";
	$x->PrimaryKey = "`Receivable`.`id`";

	$x->ColWidth   = array(  150, 150, 150, 150, 150, 150, 150, 150);
	$x->ColCaption = array("Customer", "Phone", "Description", "Expected payment date", "Last Update", "Status", "Assigned", "Amount");
	$x->ColFieldName = array('Customer', 'Phone', 'Description', 'ExpectedDate', 'LastUpdate', 'Status', 'Assigned', 'Amount');
	$x->ColNumber  = array(2, 3, 4, 6, 7, 8, 9, 10);

	// template paths below are based on the app main directory
	$x->Template = 'templates/Receivable_templateTV.html';
	$x->SelectedTemplate = 'templates/Receivable_templateTVS.html';
	$x->TemplateDV = 'templates/Receivable_templateDV.html';
	$x->TemplateDVP = 'templates/Receivable_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HighlightColor = '#FFF0C2';
	$x->HasCalculatedFields = false;

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, array('user', 'group'))) { $DisplayRecords = 'all'; }
	if($perm[2]==1 || ($perm[2]>1 && $DisplayRecords=='user' && !$_REQUEST['NoFilter_x'])) { // view owner only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `Receivable`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='Receivable' and lcase(membership_userrecords.memberID)='".getLoggedMemberID()."'";
	}elseif($perm[2]==2 || ($perm[2]>2 && $DisplayRecords=='group' && !$_REQUEST['NoFilter_x'])) { // view group only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `Receivable`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='Receivable' and membership_userrecords.groupID='".getLoggedGroupID()."'";
	}elseif($perm[2]==3) { // view all
		// no further action
	}elseif($perm[2]==0) { // view none
		$x->QueryFields = array("Not enough permissions" => "NEP");
		$x->QueryFrom = '`Receivable`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: Receivable_init
	$render=TRUE;
	if(function_exists('Receivable_init')) {
		$args=array();
		$render=Receivable_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// column sums
	if(strpos($x->HTML, '<!-- tv data below -->')) {
		// if printing multi-selection TV, calculate the sum only for the selected records
		if(isset($_REQUEST['Print_x']) && is_array($_REQUEST['record_selector'])) {
			$QueryWhere = '';
			foreach($_REQUEST['record_selector'] as $id) {   // get selected records
				if($id != '') $QueryWhere .= "'" . makeSafe($id) . "',";
			}
			if($QueryWhere != '') {
				$QueryWhere = 'where `Receivable`.`id` in ('.substr($QueryWhere, 0, -1).')';
			}else{ // if no selected records, write the where clause to return an empty result
				$QueryWhere = 'where 1=0';
			}
		}else{
			$QueryWhere = $x->QueryWhere;
		}

		$sumQuery = "select sum(`Receivable`.`Amount`) from {$x->QueryFrom} {$QueryWhere}";
		$res = sql($sumQuery, $eo);
		if($row = db_fetch_row($res)) {
			$sumRow = '<tr class="success">';
			if(!isset($_REQUEST['Print_x'])) $sumRow .= '<td class="text-center"><strong>&sum;</strong></td>';
			$sumRow .= '<td class="Receivable-Customer"></td>';
			$sumRow .= '<td class="Receivable-Phone"></td>';
			$sumRow .= '<td class="Receivable-Description"></td>';
			$sumRow .= '<td class="Receivable-ExpectedDate"></td>';
			$sumRow .= '<td class="Receivable-LastUpdate"></td>';
			$sumRow .= '<td class="Receivable-Status"></td>';
			$sumRow .= '<td class="Receivable-Assigned"></td>';
			$sumRow .= "<td class=\"Receivable-Amount text-right\">{$row[0]}</td>";
			$sumRow .= '</tr>';

			$x->HTML = str_replace('<!-- tv data below -->', '', $x->HTML);
			$x->HTML = str_replace('<!-- tv data above -->', $sumRow, $x->HTML);
		}
	}

	// hook: Receivable_header
	$headerCode='';
	if(function_exists('Receivable_header')) {
		$args=array();
		$headerCode=Receivable_header($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$headerCode) {
		include_once("$currDir/header.php"); 
	}else{
		ob_start(); include_once("$currDir/header.php"); $dHeader=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%HEADER%%>', $dHeader, $headerCode);
	}

	echo $x->HTML;
	// hook: Receivable_footer
	$footerCode='';
	if(function_exists('Receivable_footer')) {
		$args=array();
		$footerCode=Receivable_footer($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$footerCode) {
		include_once("$currDir/footer.php"); 
	}else{
		ob_start(); include_once("$currDir/footer.php"); $dFooter=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%FOOTER%%>', $dFooter, $footerCode);
	}
?>